name: Project CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  setup:
    name: setup
    runs-on: ubuntu-latest
    outputs:
      sha_short: ${{ steps.sha.outputs.sha_short }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: generate short commit hash
      id: sha
      run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

  python:
    env:
      ORG: "parsertongue"
      IMAGE_NAME: "clu-template"
      TAG: "3.8"
      DOCKERFILE: "Dockerfile"
    name: "Python library"
    runs-on: ubuntu-latest
    needs: setup
    steps:
    # Checkout code
    - name: Checkout code
      uses: actions/checkout@v2
    # Setup docker
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      continue-on-error: true
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    # Library (docker)
    - name: "Build multiarch docker image (clu-template)"
      run: |
        docker buildx build --load --platform linux/amd64 -f ${DOCKERFILE} -t "${ORG}/${IMAGE_NAME}:amd64" .
        docker buildx build --load --platform linux/arm64 -f ${DOCKERFILE} -t "${ORG}/${IMAGE_NAME}:arm64" .
    - name: "Test multiarch build (clu-template)"
      run: |
        docker run -i "${ORG}/${IMAGE_NAME}:amd64" cookiecutter --version
        docker run -i "${ORG}/${IMAGE_NAME}:arm64" cookiecutter --version

    # test clu-template
    - name: Test clu-template
      run: |
        docker run -i "${ORG}/${IMAGE_NAME}" cookiecutter --no-input /app
    
    # build and publish
    - name: "Publish docker image (cookiecutter image)"
      continue-on-error: true
      if: github.ref == 'refs/heads/main'
      run: |
        docker buildx build --platform=linux/amd64,linux/arm64 -f ${DOCKERFILE} --push -t "${ORG}/${IMAGE_NAME}:latest" -t "${ORG}/${IMAGE_NAME}:${TAG}" -t "${ORG}/${IMAGE_NAME}:${{ needs.setup.outputs.sha_short }}" .

    # docs
    - name: "Create documentation (other)"
      env:
        ORG: "parsertongue"
        IMAGE_NAME: "mkdocs"
      run: |
        docker run -i -v "$GITHUB_WORKSPACE:/app" "${ORG}/${IMAGE_NAME}" mkdocs build -c
    - name: Deploy docs
      if: github.ref == 'refs/heads/main'
      uses: peaceiris/actions-gh-pages@v3
      with:
        # see https://docs.github.com/en/free-pro-team@latest/actions/reference/authentication-in-a-workflow#about-the-github_token-secret
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./site
        user_name: 'github-actions[bot]'
        user_email: 'github-actions[bot]@users.noreply.github.com'
        commit_message: ${{ github.event.head_commit.message }}
